#!/bin/bash

##UPKEEP
alias vimsrc="vim /home/oakeada/.conf/.suse_aliases"

##CLEARCASE CMDS
#alias edcs="ct edcs"
alias catcs="ct catcs"
alias setcs="ct setcs"
alias lsco="ct lsco -r -me -cview"
alias lscos="ct lsco -r -me -cview -short"

# references
alias jamr_hopper="echo '$(tput setab 3) mount -t nfs -o soft,nolock 192.168.1.1:/home/oakeada/mnt/ /mnt/mine$(tput sgr 0)'"
alias dmjar="echo '/home/oakeada/ATV/android-q-10/vendor/dish/apks/DeviceManager/DeviceMgr.RemoteSvc.NDrain/app/src/main/libs/utils.jar'"
alias selinuxr="echo 'allow scontext tcontext:tclass { permission }'"
alias hopinfo="echo 'RID: R1911703129-35 -- SCID: S1967502974-75'"

#frequent dirs
alias cdv="cd /home/oakeada/views; ltr"
alias aroot="cd ~/ATV && ltr"
alias sepolicy="cd /home/oakeada/ATV/android-q-10/device/broadcom/inuvik/dish_selinux_policy"
alias aout="cd ./ATV/android-q-10/out/target/product"
alias stories="cd ~/stories; l"
alias tip="cd ~/tip;ls -l"
alias builds_release="cd ~/builds_release"

#smart switches
alias mj4_off="_toggle g1_off"
alias mj4_on="toggle g1_on"
alias reboot_mj4="mj4_off && sleep 15 && mj4_on"

alias wj4_on="_toggle g4_on"
alias wj4_off="_toggle g4_off"
alias reboot_wj4="wj4_off && sleep 15 && wj4_on"

alias suse_on="_toggle g2_on"
alias suse_off="_toggle g2_off"
alias reboot_suse="suse_off && sleep 15 && suse_on"

#misc
alias leases="cat ./var/lib/misc/dnsmasq.leases"
alias lcs="l *.cs"
alias shhatv="echo 'echo 3 >  /proc/sysrq-trigger'"
alias loge="echo 'LOG_ERROR(\"%s():adam - \", __FUNCTION__);'"
alias make_jar="cd /home/oakeada/ATV/android-q-10/vendor/dish/apps/sgsLite/atv_utils/build/intermediates/javac/debug/classes && jar -cf utils.jar com/dish/atv/* && cp utils.jar /home/oakeada/ATV/android-q-10/vendor/dish/apks/DeviceManager/DeviceMgr.RemoteSvc.NDrain/app/src/main/libs/com.dish.atv/utils.jar && cd -"
alias mlunch="source ~/ATV/android-q-10/build/make/envsetup.sh && lunch"
alias hopper="tnet 192.168.1.117"

##FUNCTIONS

function defgrep {
	ls -t *device* | grep $1 | xargs zgrep -h -e getLastLinkedReceiverInfo -e "Saved last" -e "WITH_HOPPER" -e stb_validate -e ACTION_AE_DISH_STANDBY_STATUS -e JOEY_CONNECT -e "Interface name:" -e "Interface ip:" -e "Interface ll_ip:" > ~/stuff/defgrep/j$1
}

function defgreph {
	path1=${PWD%/*}
	path2=${path1##*/}
	ls -t *sg_server* | xargs zgrep -h -e master_connect -e master_disconnect  > ~/stuff/defgrep/h$path2
}

function toggle {
	_toggle "$1_$2"
		echo -e
}

function _toggle {
	curl -X POST "http://maker.ifttt.com/trigger/$1/with/key/ceyFl30ngD4ES9fFogAKfl"
		echo -e
}

#Clearcase functions

function fmerge {
	if [ "$#" -ne 1 ]; then
		echo 'Please provide merge-from-branch'
	else	
		ct findmerge . -fver $1 -qal -gmerge
			fi
}

function eclipse {
## OBTAIN RELATIVE PATH OF FILE
    abspath=`readlink -f $1`
	path1=${abspath#*/}
	path2=${path1#*/}
	relpath=${path2#*/}
## ECLIPSE THE FILE
  # back it up
	cp $1 $1.keep
  # hide it
	config_spec="/home/oakeada/config_specs/$(ls_tag).cs"
	echo "element /$relpath -none" > $config_spec
	catcs >> $config_spec
	setcs $config_spec
  # eclipse the element with the backup
    mv $1.keep $1
	chmod 777 $1
}

function edcs {
    echo "Using aliased edcs"
	config_spec="/home/oakeada/config_specs/$(ls_tag).cs"
    ct edcs && 
	catcs > $config_spec
}

function cia {
	ct ci -c "$1" $(lscos)
}


function msv {
	csv ${1%.*}
}

function mrv {
    for view in $@ 
        do
    	    rmv ${view%.*}
        done
}

function keepall {
    for dir in $@ 
        do
    	    mv $dir ${dir}.bak
        done
}

function ls_tag {
	ct pwv | awk '{print $NF}' | tail -1
}

function co {
	ct co -nc $1
}

function goto {
	cd /view/$(ls_tag)/vobs/modules/$1 2>/dev/null|| cd /view/$(ls_tag)/vobs/$1
}

function create_view {
	FULLPATH=$(readlink -f $1)
	FILENAME=${FULLPATH##*/}
	BUILDID=${FILENAME%.*}
	VIEW=oakeada-$BUILDID
	
	cdv
	cmv $VIEW
	echo -e
	echo "$(tput setab 1)setcs $FULLPATH $(tput sgr 0)"
	echo -e
	msv $VIEW
}

#misc
function csd {
	cd GOT-$1
}

function keep {
    mv $1 $1.bak
}


#MISC ANDROID
function keyevent {
	echo 'alias e="input keyevent 23" && \
alias s="input keyevent 20" && \
alias a="input keyevent 21" && \
alias d="input keyevent 22" && \
alias w="input keyevent 19" && \
alias 0="input keyevent 7" && \
alias 1="input keyevent 8" && \
alias 2="input keyevent 9" && \
alias 3="input keyevent 10" && \
alias 4="input keyevent 11" && \
alias 5="input keyevent 12" && \
alias 6="input keyevent 13" && \
alias 7="input keyevent 14" && \
alias 8="input keyevent 15" && \
alias q="input keyevent 4"'
}

function run_instrument {
	adb shell am instrument -r -w $1
}

function afind {
	aroot && lll $(find . -iname $1) 2>/dev/null
		cd - >/dev/null
}

function cleanDM {
	if [ "$#" -ne 1 ]; then
		echo 'Please provide view name'
	else	
		rm -rf /home/oakeada/ATV/$1/android-q-10/out/soong/.glob/vendor/dish/apks/DeviceManager/DeviceMgr_RemoteSvc_NDrain
	fi
}

function pwdd {
	echo /ccshare/linux/c_files/oakeada/stories/$1
}

function mkshrc {
	cp ~/stuff/mkshrc ./external/mksh/mkshrc && echo success
}

#ANDROID IMAGE CREATION
function _abuild {
	CMD="make -j$1 -C /vobs/build $2DevRelease ATV_SYNC_SPEED=true ATV_SYNC_JOBS=12 ATV_PER_VIEW=true APKS_BUNDLE_ID=OAKES1 SWID=ADAM BUILD_NUMBER=00 LOCAL_GOOGLE_CLIENT_ID_BASE=android-dish-tv ANDROID_SUPPORTS_MEDIACAS=y VERBOSE=true "${@:3}""
	CCMD="$(tput setab 2)$CMD$(tput sgr 0)"
	echo $CCMD
	$CMD
}


function abuild {
	if [ "$#" -lt 1 ]; then
		echo 'Usage: abuild <board name> [extra build switches]'
		echo 'e.g:'
		echo -e
		echo '    abuild ATVMJ4'
		echo -e
		echo '    abuild ATVMJ4 ATV_MANIFEST_BRANCH=oakeada-AFA1'
	else
		_abuild 12 $@
	fi
}

function abuildn {
	if [ "$#" -lt 1 ]; then
		echo 'Usage: abuildn <board name> [extra build switches]'
		echo 'e.g:'
		echo -e
		echo '    abuildn ATVMJ4'
		echo -e
		echo '    abuildn ATVMJ4 ATV_MANIFEST_BRANCH=oakeada-AFA1'
	else
		_abuild 1 $@
	fi
}

function atv_clean {
	dir=$PWD
	goto netra && make clean && goto net_dev_mgr && make clean && goto net_con_mgr && make clean && goto escore && make clean && goto security && make clean && cd $dir
}

function build_all {
	atv_clean
	abuild ATVWJ4 $@ || abuildn ATVWJ4 $@
	atv_clean
	abuild SNAP2 $@ || abuildn SNAP2 $@
	atv_clean
	abuild ATVMJ4 $@ || abuildn ATVMJ4 $@
}

function app_build {
        if ! adb root > /dev/null; then   
	        echo "Please run adb connect"	
	else
		APK_FILE=$(find . -name *.apk)
		if [ "$APK_FILE" = "" ]; then 
			echo "Could not find apk file!"
		else
			make DEV=true && echo "Successfully built app" && adb install $APK_FILE && echo "Successfully Installed app" && adb shell reboot
		fi	
	fi
}

function copy_all {
	if [ "$#" -ne 1 ]; then
		echo 'Please provide jira id'
		echo 'e.g:'
		echo -e
		echo 'copy_all 3041'
	else	
		cd ATVMJ4 && copy_images $1 mj4 && cd ..
		cd ATVWJ4 && copy_images $1 wj4 && cd ..
		cd SNAP2 && copy_images $1 snap2
	fi
}

function copy_images {
	if [ "$#" -ne 2 ]; then
		echo 'Usage: copyImages <jira id> <board name>'
		echo 'e.g:'
		echo -e
		echo 'copy_images 3041 snap2'
	else	
		dir=/ccshare/linux/c_files/oakeada/stories/$1/$2
		mkdir -p $dir 2>/dev/null || echo "failed to create directory!"
	
		cp *.img $dir 2>/dev/null && echo "successfully copied images to $dir"
	fi
}

#STB jammers
function jam_wj4 {
    echo -e
    echo "$(tput setab 1)ifconfig eth1 -auto && boot -raw -noclose -bsu -addr=0x42000000 -max=0x100000 flash0.bsu_a && android fastboot -transport=tcp -device=flash0$(tput sgr 0)"
    echo -e
	if [ "$#" -eq 0 ]; then
		_fastboot 192.168.1.116 ATVWJ4
	else
		_fastboot 192.168.1.116 ATVWJ4 true
	fi
}

function jam_mj4 {
    echo -e
    echo "$(tput setab 1)ifconfig eth2 -auto && boot -raw -noclose -bsu -addr=0x42000000 -max=0x100000 flash0.bsu_a && android fastboot -transport=tcp -device=flash0$(tput sgr 0)"
    echo -e
    if [ "$#" -eq 0 ]; then
		_fastboot 192.168.1.104 ATVMJ4
	else
		_fastboot 192.168.1.104 ATVMJ4 true
	fi
}

function jam_snap {
    echo -e
    echo "$(tput setab 1)ifconfig eth0 -auto && boot -raw -noclose -bsu -addr=0x42000000 -max=0x100000 flash0.bsu_a && android fastboot -transport=tcp -device=flash0$(tput sgr 0)"
    echo -e
    if [ "$#" -eq 0 ]; then
		_fastboot 192.168.1.114 SNAP2
	else
		_fastboot 192.168.1.114 SNAP2 true
	fi
}

function _fastboot {
	echo "flashing from images in $PWD"
		CMD="fastboot -s tcp:$1"

		$CMD erase misc
		$CMD set_active a
		$CMD flash boot boot.img
		$CMD flash cache cache.img
		$CMD flash dtbo dtbo.$2.img

	if [ "$#" -eq 3 ]; then
		$CMD flash userdata userdata.img
	fi
		$CMD flash vbmeta vbmeta.img
		$CMD flash super super.img
		$CMD reboot
}

##MISC
function atve {	
	if [ "$#" -ne 1 ]; then
		echo 'Please provide tarball'
	else
		TARBALL=$(basename $1)
		BASELINE=${TARBALL%%.*}
		DIRECTORY=~/stuff/$BASELINE
		mkdir $DIRECTORY 2>/dev/null
		cp $1 $DIRECTORY \
		&& cd $DIRECTORY \
		&& echo "Extracting images from $TARBALL..." \
		&& tar xf $1 \
		&& l
	fi
}

function foo_jam_wj4 {
	echo "$(tput setab 1)boot -raw -noclose -bsu -addr=0x42000000 -max=0x100000 flash0.bsu_a && ifconfig eth1 -auto && android fastboot -device=flash0 -transport=tcp$(tput sgr 0)"
	_fastboot 192.168.1.116 ATVWJ4
}

function ztail {
     for i in $(find . -name "*.gz")
     do
        echo -e
        echo "$i: "
        zcat $i | tail -1
     done
}

function lirc {
    ssh pi@192.168.1.106
}

###NOTES
##Update frameworks.jar
#S=ATVWJ4 make framework && cp ./out/soong/.intermediates/frameworks/base/framework/android_common/jarjar/framework.jar <destination>
