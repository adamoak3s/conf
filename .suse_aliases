##UPKEEP
alias vimsrc="vim /home/oakeada/.conf/.suse_aliases"

##SCRIPTS & BINARIES
alias vscode="/home/oakeada/bin/VSCode-linux-x64/bin/code"
alias adb="/home/oakeada/bin/adb"
alias neofetch="/home/oakeada/bin/neofetch"

##CLEARCASE CMDS
alias cdv="cd /home/oakeada/views; l"
alias cdvobs="cd /view/$(ls_tag)/vobs"
alias edcs="ct edcs"
alias catcs="ct catcs"
alias setcs="ct setcs"
alias lsco="ct lsco -r -me -cview"
alias lscos="ct lsco -r -me -cview -short"

# references
alias jamr_pizza_util="echo 'boot -noclose -elf -bsu flash0.bsu && ifconfig eth2 -auto && android fastboot -device=flash0 -transport=tcp' && echo '$(tput setab 1)run ^THIS^ cmd in BOLT & then run vTHISv cmd here$(tput sgr 0)' && echo '/home/oakeada/c_files/androidtv/scripts/update_joey4.sh 192.168.1.105 && eth2_off'"
alias jamr_hopper="echo '$(tput setab 3) mount -t nfs -o soft,nolock 192.168.1.1:/home/oakeada/mnt/ /mnt/mine$(tput sgr 0)'"
alias jamr_snap="echo 'ifconfig eth0 -auto && boot -raw -noclose -bsu -addr=0x42000000 -max=0x100000 flash0.bsu_a && android fastboot -transport=tcp -device=flash0' && echo '$(tput setab 1)run ^THIS^ cmd in BOLT & then run vTHISv cmd here$(tput sgr 0)' && echo 'jam_snap'"
alias jamr_mj4="echo 'boot -raw -noclose -bsu -addr=0x42000000 -max=0x100000 flash0.bsu_a && ifconfig eth2 -auto && android fastboot -device=flash0 -transport=tcp' && echo '$(tput setab 1)run ^THIS^ cmd in BOLT & then run vTHISv cmd in img dir$(tput sgr 0)' && echo 'jam_mj4'"
alias jamr_wj4="echo 'boot -raw -noclose -bsu -addr=0x42000000 -max=0x100000 flash0.bsu_a && ifconfig eth1 -auto && android fastboot -device=flash0 -transport=tcp'  && echo '$(tput setab 1)run ^THIS^ cmd in BOLT & then run vTHISv cmd in img dir$(tput sgr 0)' && echo 'jam_wj4'"

alias dmjar="echo '/home/oakeada/ATV/android-q-10/vendor/dish/apks/DeviceManager/DeviceMgr.RemoteSvc.NDrain/app/src/main/libs/utils.jar'"

alias selinuxr="echo 'allow scontext tcontext:tclass { permission }'"

alias hopinfo="echo 'RID: R1911703129-35 -- SCID: S1967502974-75'"

#frequent dirs
alias aroot="cd ~/ATV && l"
alias sepolicy="cd /home/oakeada/ATV/android-q-10/device/broadcom/inuvik/dish_selinux_policy"
alias aout="cd /home/oakeada/ATV/android-q-10/out/target/product"
alias stories="cd ~/stories; l"
alias tip="cd ~/tip;ls -l"

#smart switches
alias mj4_off="_toggle g1_off"
alias mj4_on="toggle g1_on"
alias reboot_mj4="mj4_off && sleep 15 && mj4_on"

alias wj4_on="_toggle g4_on"
alias wj4_off="_toggle g4_off"
alias reboot_wj4="wj4_off && sleep 15 && wj4_on"

alias suse_on="_toggle g2_on"
alias suse_off="_toggle g2_off"
alias reboot_suse="suse_off && sleep 15 && suse_on"

#misc
alias lcs="l *.cs"
alias shhatv="echo 'echo 3 >  /proc/sysrq-trigger'"
alias adbc="adb connect 192.168.1.105:5555 && adb root"
alias loge="echo 'LOG_ERROR(\"%s():adam - \", __FUNCTION__);'"
alias pi="echo '10.74.148.212'"
alias apush="eth2_on && sleep 10 && adb connect 192.168.1.105:5555 && adb root && adb push /home/oakeada/amnt/esncmd /data/mine && eth2_off"
alias make_jar="cd /home/oakeada/ATV/android-q-10/vendor/dish/apps/sgsLite/atv_utils/build/intermediates/javac/debug/classes && jar -cf utils.jar com/dish/atv/* && cp utils.jar /home/oakeada/ATV/android-q-10/vendor/dish/apks/DeviceManager/DeviceMgr.RemoteSvc.NDrain/app/src/main/libs/com.dish.atv/utils.jar && cd -"
alias mlunch="source ~/ATV/android-q-10/build/make/envsetup.sh && lunch"
alias hopper="tnet 192.168.1.117"

##FUNCTIONS

function toggle {
	_toggle "$1_$2"
		echo -e
}

function _toggle {
	curl -X POST "http://maker.ifttt.com/trigger/$1/with/key/ceyFl30ngD4ES9fFogAKfl"
		echo -e
}

#Clearcase functions

function fmerge {
	if [ "$#" -ne 1 ]; then
		echo 'Please provide merge-from-branch'
	else	
		ct findmerge . -fver $1 -qal -gmerge
			fi
}

function eclipse {
	fullpath=$(readlink -f $1)
#remove the first /
		path1=${fullpath#*/}
#remove 'view/'
	path2=${path1#*/}
# remove '<viewname>/'
	path=${path2#*/}
	eclipse_string="element /$path -none"

		cp $1 $1.keep

		config_spec="/home/oakeada/config_specs/$(ls_tag).cs"
		echo $eclipse_string > $config_spec
		catcs >> $config_spec
		setcs $config_spec

		mv $1.keep $1
		chmod 777 $1
}

function edcs {
	config_spec="/home/oakeada/config_specs/$(ls_tag).cs"
		vim $config_spec && setcs $config_spec	
}

function cia {
	ct ci -c "$1" $(lscos)
}


function msv {
	csv ${1%.*}
}

function mrv {
	rmv ${1%.*}
}

function ls_tag {
	ct pwv | awk '{print $NF}' | tail -1
}

function co {
	ct co -nc $1
}

function goto {
	cd /view/$(ls_tag)/vobs/modules/$1 2>/dev/null|| cd /view/$(ls_tag)/vobs/$1
}

function create_view {
	FULLPATH=$(readlink -f $1)
	FILENAME=${FULLPATH##*/}
	BUILDID=${FILENAME%.*}
	VIEW=oakeada-$BUILDID
	
	cdv
	cmv $VIEW
	echo -e
	echo "$(tput setab 1)setcs $FULLPATH $(tput sgr 0)"
	echo -e
	msv $VIEW
}

#misc
function csd {
	cd GOT-$1
}

function mksdir {
	mkdir GOT-$1
}

function jamr_pizza {
	eth2_on && jamr_pizza_util
}


function ktip {
	for var in $@
		do
			cp $var $var.tip
				done
}

function kmine {
	for var in $@
		do
			mv $var $var.mine
				done
}

#MISC ANDROID
function keyevent {
	echo 'alias e="input keyevent 23" && \
alias s="input keyevent 20" && \
alias a="input keyevent 21" && \
alias d="input keyevent 22" && \
alias w="input keyevent 19" && \
alias 0="input keyevent 7" && \
alias 1="input keyevent 8" && \
alias 2="input keyevent 9" && \
alias 3="input keyevent 10" && \
alias 4="input keyevent 11" && \
alias 5="input keyevent 12" && \
alias 6="input keyevent 13" && \
alias 7="input keyevent 14" && \
alias 8="input keyevent 15" && \
alias q="input keyevent 4"'
}

function run_instrument {
	adb shell am instrument -r -w $1
}

function afind {
	aroot && lll $(find . -iname $1) 2>/dev/null
		cd - >/dev/null
}

function cleanDM {
	if [ "$#" -ne 1 ]; then
		echo 'Please provide view name'
	else	
		rm -rf /home/oakeada/ATV/$1/android-q-10/out/soong/.glob/vendor/dish/apks/DeviceManager/DeviceMgr_RemoteSvc_NDrain
			rm -rf /home/oakeada/ATV/$1/android-q-10/out/soong/.glob/vendor/dish/apks/DeviceManager/DeviceMgr_RemoteSvc_NDrain
			fi
}

function pwdd {
	echo /ccshare/linux/c_files/oakeada/stories/$1
}

function mkshrc {
	cp ~/stuff/mkshrc ./external/mksh/mkshrc && echo success
}

#ANDROID IMAGE CREATION
function atvclean {
	dir=$PWD
		goto netra && make clean && goto net_dev_mgr && make clean && goto net_con_mgr && make clean && goto escore && make clean && cd $dir
}

function _build {
	make -j$1 -C /vobs/build $2DevRelease ATV_SYNC_SPEED=true ATV_SYNC_JOBS=12 ATV_PER_VIEW=true APKS_BUNDLE_ID=OAKES1 SWID=ADAM BUILD_NUMBER=00 LOCAL_GOOGLE_CLIENT_ID_BASE=android-dish-tv ANDROID_SUPPORTS_MEDIACAS=y VERBOSE=true $3
}

function build {
	if [ "$1" = "-f" ]; then
		if [ "$#" -eq 1 ]; then
			echo 'Usage: build -s <board name> [extra build switches]'
			echo 'e.g:'
			echo -e
			echo '    build -f ATVMJ4'
			echo -e
			echo '    build -f ATVMJ4 ATV_MANIFEST_BRANCH=oakeada-AFA1'
		else
			_build 12 $2 $3 || _build 1 $2 $3
		fi
	elif [ "$1" = "-a" ]; then
	        if ! adb root > /dev/null; then   
		        echo "Please run adb connect"	
		else
			APK_FILE=$(find . -name *.apk)
			if [ "$APK_FILE" = "" ]; then 
				echo "Could not find apk file!"
			else
				make dev && echo "Successfully built app" && adb install $APK_FILE && echo "Successfully Installed app" && adb shell reboot
			fi	
		fi
	else 
			echo 'Usage: build <mode> [options]'
			echo -e
			echo '	-f		Builds a full system image'
			echo '	-a		Builds & Installs application apk'
			echo -e
	fi
}

function buildAll {
	atvclean
	build -s ATVWJ4 $1
	atvclean
	build -s SNAP2 $1 
	atvclean
	build -s ATVMJ4 $1
}

function copyAll {
	if [ "$#" -ne 1 ]; then
		echo 'Please provide jira id'
	else	
		mkdir /home/oakeada/stories/$1 2>/dev/null
		mkdir /home/oakeada/stories/$1/mj4 2>/dev/null
		mkdir /home/oakeada/stories/$1/wj4 2>/dev/null
		mkdir /home/oakeada/stories/$1/snap2 2>/dev/null
	
		cp ./ATVMJ4/*.img /home/oakeada/stories/$1/mj4 && echo 'successfully copied mj4 images'
		cp ./ATVWJ4/*.img /home/oakeada/stories/$1/wj4 && echo 'successfully copied wj4 images'
		cp ./SNAP2/*.img /home/oakeada/stories/$1/snap2 && echo 'successfully copied snap2 images'
	fi
}

function copyImages {
	if [ "$#" -ne 2 ]; then
		echo 'Usage: copyImages <jira id> <board name>'
		echo 'e.g:'
		echo -e
		echo 'copyImages 3041 snap2'
	else	
		dir=/ccshare/linux/c_files/oakeada/stories/$1/$2
		mkdir -p $dir 2>/dev/null
	
		cp *.img $dir 2>/dev/null && echo "successfully copied images to $dir"
	fi
}

#STB jammers
function jam_wj4 {
	if [ "$#" -eq 0 ]; then
		_fastboot 192.168.1.116 ATVWJ4
	else
		_fastboot 192.168.1.116 ATVWJ4 true
	fi
}

function jam_mj4 {
	if [ "$#" -eq 0 ]; then
		_fastboot 192.168.1.104 ATVMJ4
	else
		_fastboot 192.168.1.104 ATVMJ4 true
	fi
}

function jam_snap {
	if [ "$#" -eq 0 ]; then
		_fastboot 192.168.1.114 SNAP2
	else
		_fastboot 192.168.1.114 SNAP2 true
	fi
}

function _fastboot {
	echo "flashing from images in $PWD"
		CMD="/home/oakeada/bin/fastboot -s tcp:$1"

		$CMD erase misc
		$CMD set_active a
		$CMD flash boot boot.img
		$CMD flash cache cache.img
		$CMD flash dtbo dtbo.$2.img

	if [ "$#" -eq 3 ]; then
		$CMD flash userdata userdata.img
	fi
		$CMD flash vbmeta vbmeta.img
		$CMD flash super super.img
		$CMD reboot
}

##MISC
#function atve {	
#	if [ "$#" -ne 1 ]; then
#		echo 'Please provide tarball'
#	else
#		TARBALL=$1	
#		BASELINE=${TARBALL%%.*}
#		echo $BASELINE
#		DIRECTORY=~/stuff/$BASELINE
#		mkdir $DIRECTORY && echo "created $DIRECTORY" \
#		&& cp $1 $DIRECTORY/ && echo 'copied tarball' \
#		cd $DIRECTORY && tar xzvf $1 && l
#	fi
#}

###NOTES
##Update frameworks.jar
#S=ATVWJ4 make framework && cp ./out/soong/.intermediates/frameworks/base/framework/android_common/jarjar/framework.jar <destination>
